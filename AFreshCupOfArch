#!/bin/bash

set -euo pipefail

# Get the absolute path of the project root
PROJECT_ROOT=$(realpath "$(dirname "$0")")

print_intro() {
    clear
    echo "============================================================================"
    echo "               _             _       _     _                                "
    echo "              / \   _ __ ___| |__   | |   (_)_ __  _   ___  __              "
    echo "             / _ \ | '__/ __| '_ \  | |   | | '_ \| | | \ \/ /              "
    echo "            / ___ \| | | (__| | | | | |___| | | | | |_| |>  <               "
    echo "           /_/   \_\_|  \___|_| |_| |_____|_|_| |_|\__,_/_/\_\              "
    echo "            ____                   ___           _        _ _               "
    echo "           | __ )  __ _ ___  ___  |_ _|_ __  ___| |_ __ _| | |              "
    echo "           |  _ \ / _  / __|/ _ \  | || '_ \/ __| __/ _  | | |              "
    echo "           | |_) | (_| \__ \  __/  | || | | \__ \ || (_| | | |              "
    echo "           |____/ \__,_|___/\___| |___|_| |_|___/\__\__,_|_|_|              "
    echo "                                                                            "
    echo "============================================================================"
    echo ""
    echo "          This script will install Arch Linux with LVM and LUKS             "
    echo ""
    echo "============================================================================"
    echo ""
    echo ""
    sleep 2
}

get_system_info() {
    echo "Getting system info..."
    # Detect hardware model and UEFI mode
    hardware_model=$(dmidecode -s system-manufacturer)
    product_name=$(dmidecode -s system-product-name)
    uefi_mode=$(dmesg | grep -i 'EFI v' > /dev/null && echo "true" || echo "false")

    # Detect processor model
    processor_model=$(lscpu | grep 'Model name' | sed 's/Model name:\s*//')

    # Memory statistics
    memory_total=$(grep MemTotal /proc/meminfo | awk '{print $2}')
    memory_available=$(grep MemAvailable /proc/meminfo | awk '{print $2}')
    memory_total_mb=$((memory_total / 1024))
    memory_available_mb=$((memory_available / 1024))

    # Detect virtualization platform and whether it's a VM
    virtualization_platform=$(systemd-detect-virt)
    is_vm=$(if [[ $virtualization_platform != "none" ]]; then echo "true"; else echo "false"; fi)

    # Detect graphics device
    graphics_device=$(lspci | grep -i 'vga' | sed -n 's/.*: \(.*\)/\1/p')

    # Output and log system info
    echo "Hardware model detected: $hardware_model $product_name; UEFI mode: $uefi_mode"
    echo "Processor model detected: $processor_model"
    echo "Memory statistics: ${memory_available_mb}MB available out of ${memory_total_mb}MB total installed"
    echo "Virtualization detected: $virtualization_platform; is VM: $is_vm"
    echo "Graphics devices detected: dict_keys(['$graphics_device'])"
}

main() {
    print_intro
    #get_system_info
    #check_required_vars
    #check_connectivity
    #set_ntp
    #configure_mirrors
    #check_mirrorlist_updated
    #show_mountpoints
    #get_install_disk
    #is_disk_encrypted_or_lvm
    #partition_disk
    #setup_luks_and_lvm
    #create_logical_volumes
    #format_logical_volumes
    #mount_filesystems
}

main


