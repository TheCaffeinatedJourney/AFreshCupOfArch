#!/bin/bash

set -euo pipefail

project_root=$(realpath "$(dirname "$0")")


configure_networkmanager() {
    echo "Enabling NetworkManager.service"
    systemctl enable --now NetworkManager.service
    echo ""
}

set_ntp() {
    echo "Setting ntp..."
    timedatectl set-ntp true
    echo ""
}

configure_reflector() {
   echo "Configuring reflector"
   echo "Updating reflector.conf"
   cp "$project_root/assets/reflector.conf" /etc/xdg/reflector/reflector.conf

   echo "Enabling reflector.service and reflector.timer"
   # Enable reflector.service to run reflector on boot, enabling now also runs it immediately
   systemctl enable --now reflector.service
   systemctl enable reflector.timer

   echo ""
}

configure_pacman() {
    echo "Configuring pacman"
    conf="/etc/pacman.conf"

    echo "Setting Color option"
    if grep -Eq '^[#]*Color' "$conf"; then
        sed -i 's/^[#]*Color/Color/' "$conf"
    else
        sed -i '/^\[options\]/a Color' "$conf"
    fi

    echo "Setting CheckSpace option"
    if grep -Eq '^[#]*CheckSpace' "$conf"; then
        sed -i 's/^[#]*CheckSpace/CheckSpace/' "$conf"
    else
        sed -i '/^\[options\]/a CheckSpace' "$conf"
    fi
    
    echo "Setting VerbosePkgLists option"
    if grep -Eq '^[#]*VerbosePkgLists' "$conf"; then
        sed -i 's/^[#]*VerbosePkgLists/VerbosePkgLists/' "$conf"
    else
        sed -i '/^\[options\]/a VerbosePkgLists' "$conf"
    fi
    
    echo "Setting ParallelDownloads option"
    if grep -Eq '^[#]*ParallelDownloads' "$conf"; then
        sed -i 's/^[#]*ParallelDownloads.*/ParallelDownloads = 10/' "$conf"
    else
        sed -i '/^\[options\]/a ParallelDownloads = 10' "$conf"
    fi

    echo "Setting ILoveCandy option"
    if grep -Eq '^[#]*ILoveCandy' "$conf"; then
        sed -i 's/^[#]*ILoveCandy/ILoveCandy/' "$conf"
    else
        sed -i '/^\[options\]/a ILoveCandy' "$conf"
    fi
    echo ""
}

configure_makepkg() {
    echo "Configuring makepkg"

    # Allow makepkg to use all cores
    sed -i "s/^[#]*MAKEFLAGS\s*=.*/MAKEFLAGS=\"-j$(nproc)\"/" /etc/makepkg.conf
    
    echo ""
}

configure_sudoers() {
    echo "Configuring sudoers"
    sudoers_file="/etc/sudoers"

    # Uncomment the %wheel line if commented
    sed -i 's/^[#]\(%wheel ALL=(ALL:ALL) ALL\)/\1/' "$sudoers_file"

    # Add the Defaults insults line at the end if it's not already there
    if ! grep -q '^Defaults insults$' "$sudoers_file"; then
        {
            echo ""
            echo "#  If set, sudo will insult users when they enter an incorrect password."
            echo "Defaults insults"
        } >> "$sudoers_file"
    fi
    echo ""
}

install_additional_core_packages() {
    echo "Installing additional core packages"
    pacman -Syu --noconfirm bash-completion ed efibootmgr fwupd htop ibus libblockdev-lvm \
        lsof pacman-contrib smartmontools tldr udisks2-lvm2 util-linux \
        wget xdg-utils usbutils git neofetch
    echo ""
}


configure_networkmanager
set_ntp
configure_pacman
configure_makepkg
configure_sudoers
install_additional_core_packages
